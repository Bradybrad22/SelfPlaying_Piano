/*
 * 61-Key Automatic Piano (C2~C7) using ESP32-C3 + 4×PCA9685
 * ------------------------------------------------------------------
 * 硬件:
 *   - ESP32-C3  (I2C: SDA=GPIO4, SCL=GPIO5)
 *   - 4 块 PCA9685 16 通道舵机驱动板 (地址 0x40,0x41,0x42,0x43)
 *   - 61 个舵机 (对应标准钢琴 61 键: MIDI 36 (C2) ~ 96 (C7))
 *   - 第 4 块板只使用通道 0..12 (13 个) 组成总计 61 通道
 * 供电:
 *   - 舵机独立 5V 大电流(建议≥10A, 依据舵机规格)。GND 与 ESP32 / PCA9685 共地。
 * 设计要点:
 *   - 每键按下只需顺时针 ~30° (以脉宽微增 ~300µs 模拟)
 *   - 非阻塞事件调度, 支持复音和弦
 *   - 可选校准模式: 针对单键差异增减按下脉宽 (offset)
 *   - 串口指令控制播放 / 调速 / 力度 / 校准
 *   - 示例曲目: 《月光奏鸣曲》第一乐章节选 + 分解和弦练习
 * 扩展方向:
 *   - 解析外部 MIDI 文件 (转换为 NoteEvent)
 *   - 多力度映射 (不同按下角度)
 *   - NVS 保存校准数据
 *
 * 串口指令 (115200):
 *   S            重新开始播放 (Start)
 *   P            暂停 / 继续 (Pause toggle)
 *   B <百分比>  设置速度缩放 (例如 B 120 = 比原谱快 20%)
 *   V <0-100>    设置力度 (影响额外按下角度/脉宽)
 *   L            输出当前事件索引 & 时间
 *   T <midi>     测试敲击该音 (按下->延时->回位)
 *   O <midi> <Δµs>  对该音符校准偏移 (pressOffset 增减)
 *   W            列出非零校准偏移
 *   R            清零全部校准偏移
 *
 * 若定义 CALIBRATION_MODE 则允许 O/T/R/W 命令; 未定义时忽略安全指令。
 */

#include <Arduino.h>
#include <Wire.h>

// ---- 重要: 提前声明结构体避免 "'KeyMap' has not been declared" ----
// Arduino IDE 会在编译前为 .ino 自动生成所有函数原型，如果函数参数里
// 出现 KeyMap 而结构体尚未定义，就会报这个错误。把结构体提前放到最前即可。
struct KeyMap { uint8_t driverIndex; uint8_t channel; };
// 你可以使用 Adafruit_PWMServoDriver 库; 这里手写一个精简驱动包装以减少依赖。

// ============ 可配置宏 =============================
#define SDA_PIN 4
#define SCL_PIN 5
#define I2C_FREQ 400000UL

#define CALIBRATION_MODE 1   // 发布最终版本可置 0 关闭校准命令

// 舵机脉宽参数 (依实际舵机调节)
#define SERVO_MIN_US 500     // 接近 0°
#define SERVO_MAX_US 2500    // 接近 180°

// 静止与按下基准脉宽 (可整体调整)
#define REST_PULSE_US 600    // 静止位置 (避免触键) - 需实测
#define PRESS_DELTA_US 300   // 按下时相对静止增加的脉宽 (~30°)
#define MIN_HOLD_MS  55      // 最小保持时间确保机械完成按键

// 力度映射 (V 命令影响) - 追加脉宽范围
#define VELOCITY_EXTRA_MIN 0
#define VELOCITY_EXTRA_MAX 200  // 追加最大 200µs -> 约再增加 ~20° (依舵机线性近似)

// 最大同时活动音数 (根据谱的复音数, 可适当增大)
#define MAX_ACTIVE_NOTES 20

// ============ PCA9685 Driver 封装 ==================
class PCA9685 {
public:
  explicit PCA9685(uint8_t addr=0x40):_addr(addr){}
  void begin(){
    // 软复位: 写 MODE1 寄存器 0x00 进入普通模式
    write8(0x00, 0x00); // MODE1
    delay(5);
    setPWMFreq(50);     // 默认 50Hz 伺服
  }
  void setPWMFreq(float freq){
    // 频率计算: prescale = round(25MHz / (4096*freq)) -1
    float prescaleval = (25000000.0f / (4096.0f * freq)) - 1.0f;
    uint8_t prescale = (uint8_t)floor(prescaleval + 0.5f);
    uint8_t oldmode = read8(0x00); // MODE1
    uint8_t sleep = (oldmode & 0x7F) | 0x10; // sleep
    write8(0x00, sleep);
    write8(0xFE, prescale);
    write8(0x00, oldmode);
    delay(5);
    write8(0x00, oldmode | 0xA1); // Auto-Increment + ALLCALL
  }
  void setPWM(uint8_t channel, uint16_t on, uint16_t off){
    uint8_t reg = 0x06 + 4*channel;
    Wire.beginTransmission(_addr);
    Wire.write(reg);
    Wire.write(on & 0xFF);
    Wire.write(on >> 8);
    Wire.write(off & 0xFF);
    Wire.write(off >> 8);
    Wire.endTransmission();
  }
private:
  uint8_t _addr;
  void write8(uint8_t reg, uint8_t val){
    Wire.beginTransmission(_addr);
    Wire.write(reg);
    Wire.write(val);
    Wire.endTransmission();
  }
  uint8_t read8(uint8_t reg){
    Wire.beginTransmission(_addr);
    Wire.write(reg);
    Wire.endTransmission();
    Wire.requestFrom((int)_addr, 1);
    if(Wire.available()) return Wire.read();
    return 0xFF;
  }
};

// ============ 全局数据结构 ========================

static const uint8_t driverAddrs[4] = {0x40,0x41,0x42,0x44};
PCA9685 drivers[4] = { PCA9685(0x40), PCA9685(0x41), PCA9685(0x42), PCA9685(0x44) };

// MIDI 范围
#define MIDI_LOW  36  // C2
#define MIDI_HIGH 96  // C7 (含)
#define KEY_COUNT (MIDI_HIGH - MIDI_LOW + 1) // 61

// 每键按下脉宽偏移 (校准微调, 单位 µs)
int16_t pressOffset[KEY_COUNT] = {0};

// 力度 (0~100)
uint8_t velocityPercent = 60;  // 默认中等力度

// 速度缩放 (百分比, 100 = 原速)
uint16_t tempoPercent = 100;

// 播放状态变量
bool paused = false;
uint32_t startMillis = 0;   // 播放起点参考
size_t currentEventIndex = 0;

// 事件定义
struct NoteEvent {
  uint32_t startMs;   // 相对起点毫秒
  uint16_t durMs;     // 按下持续时间
  uint8_t  midi;      // 音符号 (MIDI)
  uint8_t  vel;       // 0~127 (未来可用); 当前简单用
};

// 活动音管理
struct ActiveNote { uint8_t midi; uint32_t offTime; bool active; };
ActiveNote activeNotes[MAX_ACTIVE_NOTES];

// ============ 工具函数 ============================
inline int keyIndex(uint8_t midi){ return (midi < MIDI_LOW || midi > MIDI_HIGH) ? -1 : (midi - MIDI_LOW); }

// MIDI → (driver, channel)  (已在顶部声明 KeyMap, 这里不再重复定义)
inline bool mapMidi(uint8_t midi, KeyMap &km){
  if(midi < MIDI_LOW || midi > MIDI_HIGH) return false;
  uint8_t idx = midi - MIDI_LOW; // 0..60
  uint8_t driverIndex = idx / 16; // 0..3
  uint8_t channel = idx % 16;     // 0..15
  if(driverIndex == 3 && channel > 12) return false; // 超出最后板可用通道
  km.driverIndex = driverIndex; km.channel = channel; return true;
}

// 脉宽微步转换: 50Hz 周期 20000µs -> 1 step ≈ 4.8828µs
inline uint16_t usToCount(uint16_t us){ return (uint32_t)us * 4096UL / 20000UL; }

void setServoPulse(uint8_t midi, uint16_t pulseUs){
  KeyMap km; if(!mapMidi(midi, km)) return;
  if(pulseUs < SERVO_MIN_US) pulseUs = SERVO_MIN_US;
  if(pulseUs > SERVO_MAX_US) pulseUs = SERVO_MAX_US;
  uint16_t off = usToCount(pulseUs);
  drivers[km.driverIndex].setPWM(km.channel, 0, off);
}

uint16_t computePressPulse(uint8_t midi){
  int k = keyIndex(midi); if(k < 0) return REST_PULSE_US;
  // 基础按下
  int32_t pulse = REST_PULSE_US + PRESS_DELTA_US;
  // 力度追加 (线性)
  int32_t extra = (int32_t)VELOCITY_EXTRA_MIN + (int32_t)(velocityPercent) * (VELOCITY_EXTRA_MAX - VELOCITY_EXTRA_MIN) / 100;
  pulse += extra;
  // 单键校准
  pulse += pressOffset[k];
  if(pulse < SERVO_MIN_US) pulse = SERVO_MIN_US;
  if(pulse > SERVO_MAX_US) pulse = SERVO_MAX_US;
  return (uint16_t)pulse;
}

void noteOn(uint8_t midi, uint32_t now, uint32_t dur){
  // 找空位
  int slot = -1; for(int i=0;i<MAX_ACTIVE_NOTES;i++) if(!activeNotes[i].active){ slot=i; break; }
  if(slot < 0) return; // 忽略超载
  uint16_t pressPulse = computePressPulse(midi);
  setServoPulse(midi, pressPulse);
  uint32_t hold = dur < MIN_HOLD_MS ? MIN_HOLD_MS : dur;
  activeNotes[slot] = {midi, now + hold, true};
}

void scanNoteOff(uint32_t now){
  for(int i=0;i<MAX_ACTIVE_NOTES;i++) if(activeNotes[i].active && now >= activeNotes[i].offTime){
    setServoPulse(activeNotes[i].midi, REST_PULSE_US);
    activeNotes[i].active = false;
  }
}

// ============ 示例曲谱 (节选) =====================
// 为简洁, 这里只放少量事件; 你可以继续填充。
// 《月光奏鸣曲》op.27-2 第一乐章左手分解和右手旋律 (调至适配范围, 节奏近似)
// 时间单位: ms; 假设原速 BPM 52; 你后续可用 MIDI 解析替代。

// 宏帮助 (四分音符时值 = Q)
static const uint32_t Q = 1150; // 约等于 52BPM 的四分音符 ~1153ms 取整

// 快捷: nQ(分数) -> ms
#define DUR(frac) (uint32_t)((Q * (frac)))

// 下面是一个较短的片段 + 一个分解和弦练习 (Arpeggio Study)
/* 由 Acoustic_Piano_7_0.csv 自动转换
 * 假设结构:
 *   struct NoteEvent { uint32_t startMs; uint16_t durMs; uint8_t midi; uint8_t vel; };
 * 音符格式: { startMs, durMs, midi, vel }
 * 总事件数: 618  (SCORE_LEN)
 * 总时长约: 199 s
 */
const NoteEvent score[] PROGMEM = {
  {1074,15,45,30},
  {1084,525,77,73},
  {2354,2524,89,77},
  {3617,1294,88,67},
  {3621,7,45,32},
  {4864,1165,50,46},
  {4885,1854,89,60},
  {5134,1583,88,73},
  {5153,426,57,52},
  {5354,445,86,74},
  {5359,1117,62,55},
  {5585,434,84,66},
  {5587,1130,65,44},
  {5591,218,57,38},
  {5805,912,86,77},
  {5817,663,57,47},
  {5819,920,69,57},
  {6033,426,50,39},
  {6033,684,84,76},
  {6253,426,81,77},
  {6263,416,45,39},
  {6467,255,79,80},
  {6472,246,50,39},
  {6692,1753,45,62},
  {6694,1765,81,70},
  {6894,1552,79,77},
  {6934,615,52,53},
  {7111,438,77,76},
  {7136,663,57,55},
  {7326,453,76,69},
  {7333,1112,60,49},
  {7555,904,64,54},
  {7558,910,52,46},
  {7563,882,77,69},
  {7786,659,76,68},
  {7812,632,57,31},
  {8009,450,74,68},
  {8225,221,72,72},
  {8433,921,46,59},
  {8466,886,74,62},
  {8664,690,53,48},
  {8899,453,62,63},
  {8903,449,76,77},
  {9144,216,77,75},
  {9393,1001,48,57},
  {9394,1003,79,77},
  {9625,769,55,46},
  {9850,544,64,53},
  {9875,519,81,73},
  {10109,282,58,41},
  {10110,287,86,72},
  {10122,272,60,31},
  {10384,485,53,43},
  {10388,1270,84,65},
  {10644,2142,60,42},
  {10875,1916,65,49},
  {10876,472,53,29},
  {11125,1667,67,52},
  {11361,1428,69,60},
  {11363,1429,53,30},
  {11394,1395,81,68},
  {11669,1125,48,30},
  {11671,1114,84,54},
  {11975,815,79,59},
  {12290,9,45,25},
  {12294,498,77,52},
  {12753,506,93,63},
  {12774,1265,50,46},
  {12882,487,89,70},
  {12997,482,86,69},
  {13059,310,57,52},
  {13138,481,81,68},
  {13265,494,93,73},
  {13272,247,62,62},
  {13375,503,89,73},
  {13381,1387,57,42},
  {13488,501,86,77},
  {13527,848,62,43},
  {13536,1229,64,53},
  {13631,488,81,71},
  {13763,1016,65,61},
  {13768,491,93,78},
  {13889,480,89,74},
  {14003,497,86,81},
  {14044,215,50,29},
  {14134,494,81,77},
  {14265,500,93,78},
  {14273,256,50,40},
  {14380,385,89,76},
  {14513,253,86,76},
  {14535,231,50,24},
  {14636,129,81,63},
  {14761,128,45,66},
  {14765,514,91,71},
  {14901,488,88,74},
  {14903,496,45,45},
  {14993,516,52,62},
  {15036,483,84,69},
  {15156,483,81,72},
  {15234,685,57,60},
  {15285,484,91,77},
  {15402,497,88,73},
  {15406,913,45,48},
  {15520,638,52,47},
  {15523,1320,60,57},
  {15524,505,84,72},
  {15648,501,81,64},
  {15778,511,91,71},
  {15782,1077,64,55},
  {15912,496,88,70},
  {15924,115,57,29},
  {16036,523,84,69},
  {16045,264,57,32},
  {16164,505,81,65},
  {16171,398,52,33},
  {16303,540,91,67},
  {16317,112,57,38},
  {16326,516,45,36},
  {16420,421,88,66},
  {16440,403,57,24},
  {16574,268,84,62},
  {16583,260,52,38},
  {16682,160,81,61},
  {16816,1073,46,54},
  {16826,503,89,65},
  {16950,509,86,65},
  {17044,285,53,46},
  {17083,506,82,72},
  {17201,498,77,63},
  {17334,554,53,46},
  {17334,255,62,58},
  {17335,553,89,77},
  {17464,421,86,73},
  {17596,290,82,68},
  {17598,11,50,38},
  {17598,288,62,39},
  {17602,7,58,36},
  {17707,184,77,68},
  {17872,1387,84,62},
  {17877,242,48,58},
  {17989,419,79,70},
  {18121,477,76,69},
  {18128,340,48,43},
  {18134,295,55,52},
  {18272,487,72,66},
  {18420,824,79,66},
  {18429,815,64,49},
  {18444,325,55,33},
  {18479,730,48,28},
  {18604,642,76,62},
  {18772,472,72,62},
  {18773,6,52,31},
  {18781,463,55,33},
  {19217,62,48,31},
  {19226,872,53,41},
  {19233,2329,77,57},
  {19535,2019,60,40},
  {19800,9,50,31},
  {19803,1752,65,43},
  {19804,1755,48,26},
  {20110,319,53,23},
  {20114,1440,67,42},
  {20436,1121,69,51},
  {20442,1113,53,24},
  {21572,1317,41,31},
  {21830,268,48,52},
  {21839,9,60,35},
  {22096,793,53,48},
  {22106,253,48,31},
  {22364,285,48,37},
  {22375,1330,55,42},
  {22375,1330,60,53},
  {22645,13,45,48},
  {22654,765,57,57},
  {22658,481,48,42},
  {22662,1043,62,63},
  {22894,764,41,38},
  {22894,495,65,67},
  {22895,810,53,39},
  {23153,236,48,38},
  {23153,516,67,73},
  {23394,14,50,48},
  {23399,306,65,67},
  {23402,303,48,40},
  {23424,281,57,34},
  {23667,801,41,48},
  {23675,1554,67,67},
  {23963,996,48,55},
  {23963,486,69,72},
  {24214,1530,53,56},
  {24462,506,69,77},
  {24470,2019,55,51},
  {24473,6,44,43},
  {24479,1265,41,37},
  {24717,1027,57,63},
  {24972,257,48,38},
  {24976,768,69,67},
  {25238,230,48,34},
  {25242,476,67,64},
  {25480,266,65,58},
  {25483,261,48,37},
  {25723,1536,67,61},
  {25726,1283,40,47},
  {25985,504,69,68},
  {25990,260,48,57},
  {26240,249,52,50},
  {26259,230,48,32},
  {26500,239,48,43},
  {26500,509,52,41},
  {26500,500,69,74},
  {26503,1336,55,45},
  {26750,519,48,44},
  {26756,1047,60,55},
  {27013,791,69,66},
  {27016,787,52,34},
  {27020,783,40,31},
  {27273,506,67,62},
  {27278,231,48,36},
  {27513,295,65,57},
  {27524,280,48,36},
  {27746,2341,38,50},
  {27789,1520,67,59},
  {28033,2052,45,56},
  {28186,713,65,63},
  {28361,948,50,59},
  {28361,538,53,40},
  {28627,1460,62,62},
  {28628,1456,52,55},
  {28910,1179,65,60},
  {28914,865,53,49},
  {29319,766,50,44},
  {29324,767,67,63},
  {29774,305,69,59},
  {29785,306,53,31},
  {30071,468,36,43},
  {30084,2104,69,57},
  {30355,1004,45,57},
  {30597,762,48,58},
  {30604,265,60,42},
  {30835,1325,52,52},
  {30877,1283,60,56},
  {31117,1043,62,56},
  {31364,484,65,59},
  {31367,481,45,37},
  {31373,496,48,36},
  {31614,505,67,64},
  {31855,305,45,38},
  {31858,303,65,59},
  {31881,279,48,32},
  {32126,374,46,59},
  {32134,1714,67,68},
  {32403,966,53,51},
  {32403,1759,65,65},
  {32602,1560,58,59},
  {32859,1305,74,65},
  {32861,8,48,44},
  {32864,225,46,44},
  {32867,1295,60,50},
  {33104,265,46,40},
  {33105,1057,62,61},
  {33363,799,72,76},
  {33377,221,46,39},
  {33381,467,53,30},
  {33611,237,46,40},
  {33611,551,69,70},
  {33856,306,53,39},
  {33856,242,67,67},
  {33859,10,50,41},
  {33861,301,46,41},
  {34109,710,45,62},
  {34111,1448,67,65},
  {34337,732,53,51},
  {34364,705,65,59},
  {34580,1529,57,59},
  {34828,1001,48,46},
  {34832,1242,60,55},
  {34833,486,45,47},
  {34835,484,69,67},
  {35078,731,65,54},
  {35083,743,53,39},
  {35324,265,45,45},
  {35324,750,69,68},
  {35557,12,50,41},
  {35570,499,67,66},
  {35602,217,45,35},
  {35820,254,65,60},
  {35824,250,45,40},
  {35838,251,48,32},
  {36042,586,44,44},
  {36042,7,46,42},
  {36053,246,50,43},
  {36082,377,67,63},
  {36305,154,50,57},
  {36472,347,50,44},
  {36473,356,67,68},
  {36635,1681,55,48},
  {36639,200,44,38},
  {36833,1483,50,42},
  {36843,285,67,66},
  {36846,693,44,41},
  {36876,1441,57,55},
  {37134,1182,58,58},
  {37136,1163,67,63},
  {37544,773,44,35},
  {37544,772,65,58},
  {38014,303,46,39},
  {38022,294,62,58},
  {38309,1530,67,55},
  {38334,495,48,52},
  {38563,1802,55,51},
  {38832,1533,58,46},
  {38834,255,48,30},
  {39095,744,46,33},
  {39095,234,48,35},
  {39102,1263,60,52},
  {39343,246,48,39},
  {39343,1024,62,65},
  {39597,482,65,66},
  {39598,471,48,38},
  {39852,515,46,43},
  {39854,485,67,69},
  {40084,280,48,39},
  {40084,14,50,44},
  {40084,281,65,67},
  {40302,886,41,48},
  {40350,1539,67,61},
  {40596,312,48,54},
  {40736,903,69,74},
  {40923,256,48,38},
  {40924,1470,53,48},
  {41173,1222,72,77},
  {41175,1219,55,46},
  {41191,698,48,36},
  {41200,428,41,38},
  {41403,991,57,63},
  {41635,14,45,45},
  {41644,751,41,38},
  {41644,750,69,72},
  {41902,487,67,69},
  {41903,255,48,34},
  {42143,251,65,65},
  {42164,230,48,33},
  {42395,504,52,44},
  {42397,1231,40,46},
  {42397,532,67,65},
  {42645,284,48,58},
  {42705,914,69,72},
  {42911,247,52,59},
  {42934,224,48,37},
  {42941,928,67,34},
  {43151,738,55,56},
  {43165,213,48,43},
  {43170,699,52,48},
  {43394,734,48,43},
  {43395,1007,60,57},
  {43634,15,46,41},
  {43634,769,69,73},
  {43643,226,40,38},
  {43884,518,40,38},
  {43884,518,52,38},
  {43884,485,67,72},
  {43895,233,55,36},
  {44131,272,65,61},
  {44138,265,48,39},
  {44143,261,55,36},
  {44373,636,50,50},
  {44376,293,46,45},
  {44381,1168,67,63},
  {44660,619,45,59},
  {44834,705,65,62},
  {45016,543,53,38},
  {45018,517,50,54},
  {45266,270,62,66},
  {45274,258,52,47},
  {45287,232,45,42},
  {45532,406,45,45},
  {45545,1169,65,59},
  {45565,1148,53,48},
  {45949,440,50,39},
  {45951,438,45,38},
  {45954,759,67,64},
  {46395,318,50,36},
  {46397,312,45,34},
  {46401,312,69,59},
  {46673,2054,36,46},
  {46692,2033,72,62},
  {46725,14,60,23},
  {46951,1774,45,58},
  {47196,753,48,61},
  {47455,1268,52,54},
  {47460,1265,60,60},
  {47704,1021,57,59},
  {47713,1012,62,62},
  {47954,484,65,63},
  {47959,490,48,38},
  {48204,495,67,73},
  {48222,517,53,28},
  {48451,274,65,62},
  {48458,281,48,41},
  {48713,1746,67,69},
  {48721,728,46,61},
  {48748,271,48,39},
  {48977,752,53,53},
  {48996,1789,65,69},
  {49200,1585,58,63},
  {49455,1334,74,67},
  {49463,496,46,49},
  {49463,1322,60,56},
  {49710,1075,62,64},
  {49735,1048,53,34},
  {49964,821,72,71},
  {49972,487,46,39},
  {50208,10,45,43},
  {50214,571,69,70},
  {50470,259,67,68},
  {50471,314,46,41},
  {50733,735,45,61},
  {50740,1469,67,67},
  {50976,742,53,51},
  {50983,726,65,57},
  {51208,1456,57,59},
  {51473,245,48,47},
  {51475,1190,60,55},
  {51475,484,69,71},
  {51477,482,45,47},
  {51722,746,65,58},
  {51725,939,53,38},
  {51726,242,48,36},
  {51972,267,45,43},
  {51973,691,69,68},
  {51976,524,48,34},
  {52221,444,67,64},
  {52248,261,45,32},
  {52480,184,65,52},
  {52505,713,48,25},
  {52515,149,45,28},
  {52733,1082,44,49},
  {52738,341,67,63},
  {52971,108,50,60},
  {53085,424,67,67},
  {53093,416,50,49},
  {53264,549,60,66},
  {53516,297,50,48},
  {53524,255,67,70},
  {53782,607,48,55},
  {53785,1284,67,63},
  {54070,989,55,48},
  {54113,926,44,25},
  {54151,868,65,57},
  {54402,609,58,54},
  {54403,611,48,34},
  {54700,359,46,37},
  {54707,363,62,55},
  {55027,2056,41,42},
  {55033,736,65,46},
  {55285,474,48,52},
  {55292,7,60,36},
  {55532,757,53,54},
  {55773,1046,48,41},
  {55774,1302,65,70},
  {55786,1312,55,45},
  {56023,1055,77,82},
  {56026,1054,57,59},
  {56273,236,76,80},
  {56302,780,53,34},
  {56515,514,76,77},
  {56764,319,74,74},
  {56803,306,45,23},
  {56826,256,48,19},
  {57019,2060,38,50},
  {57033,6,46,45},
  {57044,2018,76,71},
  {57321,978,45,62},
  {57348,701,74,74},
  {57576,743,50,68},
  {57804,485,72,73},
  {57841,208,53,51},
  {58061,994,74,67},
  {58062,257,53,43},
  {58071,986,57,58},
  {58303,766,72,72},
  {58309,720,45,38},
  {58328,211,50,38},
  {58328,730,53,31},
  {58548,509,50,45},
  {58557,472,69,68},
  {58791,272,67,66},
  {59042,727,45,55},
  {59044,2035,69,65},
  {59286,253,52,47},
  {59290,479,72,68},
  {59518,771,55,52},
  {59535,994,74,60},
  {59553,726,52,36},
  {59782,997,45,36},
  {59783,496,72,69},
  {59807,1259,60,47},
  {60035,1031,64,55},
  {60286,483,72,65},
  {60292,257,52,33},
  {60295,771,55,27},
  {60535,484,74,64},
  {60562,503,52,28},
  {60783,315,72,71},
  {60785,281,45,35},
  {61013,1056,46,62},
  {61032,346,74,62},
  {61239,570,53,52},
  {61385,424,74,80},
  {61554,580,62,64},
  {61815,264,74,72},
  {61817,317,53,37},
  {62062,337,48,59},
  {62075,59,46,45},
  {62084,895,74,66},
  {62322,1003,55,59},
  {62471,798,72,74},
  {62678,648,64,57},
  {62691,328,48,36},
  {62993,335,74,65},
  {63024,5,53,23},
  {63026,243,48,20},
  {63276,1993,72,64},
  {63277,49,48,39},
  {63279,1750,41,46},
  {63552,477,48,53},
  {63554,1465,69,56},
  {63792,1547,53,53},
  {64042,217,48,28},
  {64044,1273,55,51},
  {64266,234,48,35},
  {64273,1043,57,60},
  {64510,805,65,48},
  {64513,246,48,32},
  {64764,15,45,40},
  {64765,552,67,64},
  {64773,256,48,34},
  {65028,11,45,37},
  {65032,284,69,68},
  {65037,278,41,35},
  {65042,273,48,33},
  {65277,2018,72,66},
  {65285,724,38,54},
  {65532,457,45,58},
  {65540,1439,69,64},
  {65747,482,50,63},
  {65755,963,67,64},
  {66000,229,45,49},
  {66003,1292,52,55},
  {66003,476,65,61},
  {66234,755,53,62},
  {66236,482,45,43},
  {66236,243,50,41},
  {66490,228,50,55},
  {66493,802,65,70},
  {66729,566,67,70},
  {66731,258,45,43},
  {66733,246,50,44},
  {66988,306,50,50},
  {66988,310,69,75},
  {66997,298,45,40},
  {66998,297,53,44},
  {67239,2034,74,70},
  {67243,566,44,57},
  {67486,313,50,64},
  {67515,1751,69,63},
  {67717,1292,57,59},
  {67753,1519,67,69},
  {67805,163,50,35},
  {67815,1453,44,38},
  {67983,485,65,61},
  {67984,495,50,55},
  {67990,1279,58,61},
  {68484,255,65,79},
  {68485,254,46,51},
  {68486,264,50,53},
  {68747,242,65,75},
  {68752,297,46,45},
  {68755,264,50,47},
  {68996,276,65,71},
  {69015,255,57,47},
  {69024,248,50,32},
  {69059,213,46,36},
  {69257,243,47,58},
  {69264,375,77,83},
  {69497,832,55,60},
  {69513,166,47,45},
  {69522,2037,50,29},
  {69652,387,77,85},
  {69684,135,47,42},
  {69832,207,47,49},
  {69837,1768,60,64},
  {70050,279,47,48},
  {70052,277,77,81},
  {70082,1523,62,58},
  {70335,434,55,38},
  {70341,478,47,46},
  {70343,1296,65,56},
  {70343,896,77,78},
  {70777,782,74,69},
  {70779,460,55,34},
  {70782,7,44,38},
  {70832,418,47,23},
  {71251,354,55,27},
  {71252,357,77,75},
  {71261,343,47,28},
  {71553,266,48,52},
  {71570,2398,74,54},
  {71828,761,55,42},
  {71833,756,48,25},
  {72055,14,46,30},
  {72059,1879,60,46},
  {72311,1625,62,48},
  {72358,1579,72,66},
  {72593,266,48,28},
  {72593,1345,64,44},
  {72597,272,55,24},
  {72846,1092,65,40},
  {72864,294,48,20},
  {72884,1056,55,11},
  {73169,790,77,62},
  {73173,436,48,31},
  {73610,9,45,26},
  {73618,319,48,27},
  {73618,323,76,58},
  {73944,2085,38,42},
  {73972,2047,77,63},
  {74236,503,45,54},
  {74250,1769,76,74},
  {74484,545,50,59},
  {74490,499,74,72},
  {74744,485,72,72},
  {74753,497,45,44},
  {74765,235,53,45},
  {74993,727,57,60},
  {74994,1024,74,66},
  {75005,254,53,39},
  {75042,987,50,25},
  {75239,777,72,75},
  {75263,196,45,33},
  {75265,750,53,18},
  {75473,245,45,38},
  {75479,480,69,69},
  {75723,236,45,38},
  {75727,300,67,64},
  {75971,1578,69,64},
  {75973,715,45,56},
  {76204,255,52,48},
  {76209,479,72,67},
  {76428,1566,55,49},
  {76464,974,52,34},
  {76464,965,74,58},
  {76696,492,45,40},
  {76701,487,72,63},
  {76707,532,60,51},
  {76940,1054,64,49},
  {77201,468,45,39},
  {77204,465,72,67},
  {77244,750,60,23},
  {77442,477,74,68},
  {77445,243,52,35},
  {77679,314,45,39},
  {77683,326,72,80},
  {77701,292,52,27},
  {77933,346,74,68},
  {77934,345,46,61},
  {78184,555,53,52},
  {78285,433,74,73},
  {78290,460,46,46},
  {78490,580,62,66},
  {78733,267,74,65},
  {78748,322,53,29},
  {78763,306,46,29},
  {79002,607,48,61},
  {79014,894,74,54},
  {79273,958,55,55},
  {79407,751,72,72},
  {79614,619,64,52},
  {79622,611,48,37},
  {79916,318,74,56},
  {80173,1735,72,62},
  {80184,2021,41,49},
  {80433,466,48,53},
  {80436,1472,69,57},
  {80673,1534,55,47},
  {80906,243,48,38},
  {80912,1293,57,57},
  {81161,247,48,37},
  {81164,1041,60,57},
  {81424,264,48,38},
  {81427,272,53,38},
  {81427,778,65,58},
  {81654,553,67,70},
  {81699,506,48,35},
  {81709,520,53,41},
  {81920,285,69,69},
  {82175,1543,38,57},
  {82175,1543,72,69},
  {82414,1455,69,72},
  {82442,927,45,61},
  {82652,726,50,65},
  {82653,966,67,69},
  {82886,1239,52,55},
  {82886,483,65,60},
  {83118,1008,53,62},
  {83381,745,65,65},
  {83382,227,45,47},
  {83385,740,50,51},
  {83595,535,57,63},
  {83619,508,45,49},
  {83630,497,67,71},
  {83877,253,69,71},
  {84102,537,44,55},
  {84104,5,46,51},
  {84121,1724,74,67},
  {84342,596,50,62},
  {84375,1468,69,69},
  {84628,1217,67,70},
  {84649,1196,44,42},
  {84649,1194,57,53},
  {84953,890,50,50},
  {84959,884,65,62},
  {84994,865,46,41},
  {84996,849,58,53},
  {85882,3390,47,42},
  {85885,1944,77,66},
  {87842,1017,77,64},
  {88442,776,74,57},
  {88450,738,46,29},
  {88864,408,77,66},
  {88865,13,48,27},
  {89204,424,46,54},
  {89234,415,74,60},
  {89494,835,53,34},
  {89557,492,72,73},
  {89781,548,46,31},
  {89781,817,60,46},
  {90044,1364,62,55},
  {90057,512,72,71},
  {90335,1075,74,62},
  {90339,230,53,31},
  {90343,226,46,31},
  {90575,264,46,28},
  {90575,835,72,70},
  {90582,507,53,25},
  {90604,807,60,21},
  {90854,557,46,36},
  {90854,524,69,70},
  {91100,312,53,30},
  {91102,310,67,62},
  {91334,305,48,52},
  {91386,3193,69,64},
  {91645,2916,55,42},
  {91652,506,48,34},
  {91652,2196,67,61},
  {91924,2633,58,50},
  {92162,917,65,49},
  {92169,910,48,30},
  {92643,1936,46,31},
  {92654,1907,62,51},
  {93088,1441,50,38},
  {93091,757,48,34},
  {93091,1438,65,47},
  {93855,706,67,45},
  {93856,702,48,27},
  {94510,2555,41,42},
  {94542,2567,65,43},
  {94828,1501,48,50},
  {95113,575,53,45},
  {95381,1684,58,50},
  {95687,1379,60,49},
  {95703,1363,53,23},
  {96339,730,48,25},
  {96342,747,55,40},
  {97078,11,45,25},
  {97080,219,48,19},
  {97091,2147,57,46},
  {98735,15,46,21},
  {98744,1655,60,35},
  {99192,7,45,30},
  {99197,852,62,52},
  {99497,552,65,55},
  {99783,616,46,39},
  {99783,266,50,42},
  {99787,552,67,65},
  {100054,331,62,34},
  {100054,331,65,55},
  {100055,314,48,33},
  {100055,353,50,42},
  {100304,2132,41,44},
  {100345,1524,67,61},
  {100604,244,48,51},
  {100658,440,69,68},
  {100863,1574,53,55},
  {100864,234,48,40},
  {101104,244,48,42},
  {101105,504,69,66},
  {101115,763,55,50},
  {101354,255,48,38},
  {101359,1078,57,63},
  {101622,814,69,72},
  {101623,246,48,35},
  {101882,477,67,71},
  {101884,244,48,37},
  {101885,551,55,36},
  {102134,5,50,47},
  {102134,303,65,66},
  {102144,292,48,39},
  {102373,1255,40,50},
  {102373,1505,67,70},
  {102641,478,69,69},
  {102644,245,48,54},
  {102881,228,52,59},
  {102895,233,48,36},
  {103114,525,55,52},
  {103119,759,52,44},
  {103127,492,69,76},
  {103134,1281,48,41},
  {103377,1037,60,56},
  {103631,783,69,75},
  {103638,11,46,40},
  {103643,246,40,35},
  {103652,237,55,36},
  {103893,485,67,70},
  {103894,520,52,38},
  {103898,516,40,34},
  {103903,511,55,36},
  {104144,14,50,43},
  {104144,275,65,61},
  {104377,322,46,49},
  {104378,1214,38,56},
  {104389,1220,67,60},
  {104690,599,45,56},
  {104804,745,65,62},
  {105026,567,50,58},
  {105026,533,53,38},
  {105252,341,62,62},
  {105294,255,45,41},
  {105295,298,52,46},
  {105554,1946,65,60},
  {105562,406,45,47},
  {105566,1253,53,53},
  {105972,822,50,41},
  {105973,821,45,37},
  {105977,823,67,68},
  {106434,275,69,63},
  {106714,2105,36,45},
  {106721,2127,69,58},
  {106972,1028,45,59},
  {107234,766,48,61},
  {107479,1346,52,57},
  {107503,1323,60,54},
  {107731,1095,62,60},
  {107733,1092,57,57},
  {108003,516,65,55},
  {108005,821,45,41},
  {108006,523,48,37},
  {108252,507,67,68},
  {108527,292,65,66},
  {108535,293,48,41},
  {108765,814,46,64},
  {108770,1549,67,68},
  {108826,153,65,34},
  {109067,742,53,52},
  {109085,1474,65,64},
  {109292,1571,58,56},
  {109574,1289,60,52},
  {109576,1284,72,75},
  {109588,221,46,43},
  {109815,254,46,42},
  {109816,1047,62,62},
  {109824,495,53,39},
  {110075,788,69,67},
  {110080,239,46,44},
  {110326,503,67,68},
  {110330,533,46,39},
  {110332,532,53,35},
  {110566,295,50,47},
  {110571,293,65,60},
  {110834,245,45,59},
  {110837,1502,67,61},
  {111078,781,53,50},
  {111089,509,45,45},
  {111117,742,65,58},
  {111363,1556,57,51},
  {111602,1282,48,46},
  {111605,504,45,45},
  {111605,504,69,65},
  {111614,1270,60,49},
  {111867,722,65,55},
  {111872,726,53,38},
  {112122,217,45,43},
  {112122,762,69,68},
  {112346,243,45,39},
  {112352,507,67,71},
  {112602,283,45,39},
  {112602,282,65,61},
  {112605,279,53,36},
  {112833,2284,44,51},
  {112843,5,46,47},
  {112868,411,67,62},
  {113136,302,50,56},
  {113285,424,67,68},
  {113453,1662,55,58},
  {113454,965,50,47},
  {113705,1410,57,58},
  {113714,295,67,63},
  {113994,1120,58,55},
  {114014,1105,67,66},
  {114432,683,50,46},
  {114434,681,65,58},
  {114839,300,46,39},
  {114843,272,62,60},
  {115122,247,48,53},
  {115125,1503,67,51},
  {115365,1822,55,49},
  {115381,238,48,31},
  {115622,1564,58,50},
  {115630,248,48,33},
  {115884,1304,60,47},
  {115891,248,48,34},
  {116148,1040,62,60},
  {116153,246,48,34},
  {116403,475,65,63},
  {116410,468,48,41},
  {116639,500,67,69},
  {116891,303,65,68},
  {116894,292,48,42},
  {117140,809,41,51},
  {117147,1552,67,73},
  {117397,272,48,59},
  {117506,943,69,72},
  {117683,546,48,38},
  {117683,1578,53,50},
  {117944,1316,72,78},
  {117954,14,44,40},
  {117954,1306,55,41},
  {117957,492,41,37},
  {118236,713,57,48},
  {118239,229,48,33},
  {118446,13,45,41},
  {118455,806,69,75},
  {118460,800,41,36},
  {118475,224,48,31},
  {118696,13,50,38},
  {118704,495,67,66},
  {118713,266,48,30},
  {118944,316,65,63},
  {118954,307,57,43},
  {118984,277,48,19},
  {119195,2002,40,49},
  {119207,1462,67,66},
  {119455,244,48,56},
  {119475,944,69,74},
  {119696,723,52,63},
  {119704,234,48,42},
  {119936,1442,74,71},
  {119944,225,48,43},
  {119947,1256,55,56},
  {120175,244,48,42},
  {120178,1021,60,62},
  {120425,474,48,44},
  {120425,776,69,72},
  {120432,256,52,41},
  {120675,483,67,75},
  {120695,501,52,35},
  {120708,10,44,28},
  {120914,286,48,41},
  {120914,291,65,64},
  {121154,2310,38,58},
  {121164,1565,67,57},
  {121428,911,45,58},
  {121570,749,65,64},
  {121778,1371,50,61},
  {122040,1419,52,52},
  {122041,1432,62,61},
  {122325,833,53,51},
  {122325,1148,65,57},
  {122352,417,45,39},
  {122743,729,67,67},
  {122778,688,45,36},
  {123164,308,50,47},
  {123171,305,69,66},
  {123174,297,53,41},
  {123442,2042,72,71},
  {123477,401,36,47},
  {123488,450,60,31},
  {123692,1007,45,63},
  {123946,793,48,67},
  {123951,237,60,50},
  {124192,1293,52,58},
  {124204,1281,60,59},
  {124425,564,57,65},
  {124457,1028,62,66},
  {124703,496,65,65},
  {124705,494,45,44},
  {124753,446,48,28},
  {124954,505,67,74},
  {125001,499,57,29},
  {125207,278,45,46},
  {125209,275,65,68},
  {125213,272,48,40},
  {125433,1255,46,64},
  {125466,1722,67,62},
  {125716,523,53,53},
  {125744,1753,65,70},
  {125933,1563,58,64},
  {126184,1313,60,61},
  {126197,1304,74,74},
  {126244,985,53,30},
  {126441,1056,62,67},
  {126703,793,46,43},
  {126703,794,72,76},
  {126953,6,45,43},
  {126954,543,69,68},
  {127199,239,67,68},
  {127214,4,48,37},
  {127236,258,53,30},
  {127453,1485,67,69},
  {127454,1245,45,61},
  {127700,749,53,49},
  {127736,713,65,62},
  {127951,1530,57,59},
  {128190,1289,60,55},
  {128192,257,48,46},
  {128218,481,69,68},
  {128459,740,65,53},
  {128462,1017,53,41},
  {128463,736,48,40},
  {128705,494,45,40},
  {128705,774,69,70},
  {128949,10,50,38},
  {128954,484,67,62},
  {129204,277,65,51},
  {129205,272,45,39},
  {129213,264,48,36},
  {129445,1118,44,52},
  {129451,338,67,61},
  {129704,514,50,63},
  {129799,419,67,70},
  {129845,734,55,27},
  {129994,568,60,67},
  {130223,340,50,46},
  {130225,275,67,67},
  {130494,425,48,61},
  {130513,1226,67,61},
  {130755,942,55,47},
  {130891,788,65,63},
  {130924,768,48,28},
  {131114,580,58,51},
  {131395,334,46,40},
  {131402,328,62,58},
  {131686,2044,41,48},
  {131694,714,65,50},
  {131933,1796,48,58},
  {132184,765,53,60},
  {132423,1306,65,64},
  {132430,1309,55,51},
  {132671,1059,57,59},
  {132673,1057,77,77},
  {132933,236,76,79},
  {132957,772,53,26},
  {133179,490,76,82},
  {133424,309,74,79},
  {133425,13,45,34},
  {133653,1847,38,53},
  {133682,2017,76,71},
  {133933,966,45,61},
  {133936,692,74,70},
  {134152,756,50,69},
  {134375,503,72,73},
  {134401,1286,53,50},
  {134636,1050,74,67},
  {134640,1044,57,59},
  {134891,795,72,78},
  {134910,248,45,38},
  {134916,443,50,40},
  {135131,497,69,74},
  {135165,454,45,34},
  {135367,317,50,40},
  {135372,322,67,68},
  {135625,1223,45,62},
  {135639,1739,69,67},
  {135864,1755,52,51},
  {135867,481,72,73},
  {136085,1536,55,57},
  {136114,965,74,67},
  {136355,493,72,70},
  {136365,1256,60,53},
  {136595,1024,64,59},
  {136855,464,72,75},
  {136864,455,45,39},
  {137085,494,74,72},
  {137328,293,45,38},
  {137330,268,72,78},
  {137574,705,46,62},
  {137593,296,74,63},
  {137611,58,72,57},
  {137828,823,53,54},
  {137903,445,74,78},
  {138104,547,62,67},
  {138359,260,74,76},
  {138593,1210,48,65},
  {138632,857,74,71},
  {138902,900,55,49},
  {138958,542,72,74},
  {139203,600,64,56},
  {139497,307,74,62},
  {139513,237,72,50},
  {139761,498,72,65},
  {139773,1756,41,47},
  {140026,1493,69,62},
  {140035,1234,48,57},
  {140277,1525,53,56},
  {140320,9,60,28},
  {140516,1287,55,55},
  {140770,1032,57,60},
  {141024,778,65,55},
  {141274,265,48,36},
  {141274,529,67,63},
  {141529,10,45,41},
  {141531,272,69,71},
  {141544,258,41,35},
  {141548,252,48,34},
  {141755,1984,38,58},
  {141774,2015,72,66},
  {142031,478,45,63},
  {142033,1467,69,66},
  {142273,736,50,54},
  {142273,977,67,65},
  {142514,486,45,48},
  {142519,481,65,51},
  {142520,1259,52,54},
  {142760,759,53,55},
  {143013,266,45,45},
  {143013,769,65,67},
  {143018,763,50,48},
  {143261,521,67,70},
  {143287,242,45,39},
  {143511,271,69,72},
  {143533,248,53,40},
  {143541,241,45,38},
  {143742,497,44,62},
  {143744,2145,74,67},
  {143993,1809,50,66},
  {144005,1794,69,70},
  {144246,13,46,44},
  {144246,1557,55,55},
  {144247,1553,67,70},
  {144251,1551,44,51},
  {144484,1319,57,66},
  {144493,475,65,67},
  {144718,1080,58,71},
  {144721,1082,46,53},
  {144975,254,65,73},
  {145239,229,65,76},
  {145483,320,65,71},
  {145738,251,47,66},
  {145744,365,77,88},
  {145992,817,55,62},
  {146001,308,47,48},
  {146115,404,77,88},
  {146315,224,47,52},
  {146316,1719,60,65},
  {146533,276,77,88},
  {146549,1100,62,66},
  {146552,257,53,43},
  {146553,706,47,50},
  {146817,1232,53,41},
  {146817,1218,65,62},
  {146822,836,77,90},
  {146824,435,55,42},
  {147231,769,74,73},
  {147266,767,47,40},
  {147273,762,55,26},
  {147658,375,62,42},
  {147665,371,77,80},
  {147958,301,48,55},
  {148006,2513,74,66},
  {148264,755,55,52},
  {148272,67,48,31},
  {148494,2007,60,56},
  {148505,524,48,31},
  {148734,1760,62,53},
  {148776,1722,72,73},
  {149015,1479,64,49},
  {149031,1462,55,27},
  {149037,222,48,27},
  {149273,296,48,31},
  {149274,1227,65,47},
  {149572,896,77,71},
  {149578,501,48,32},
  {150082,425,76,63},
  {150085,415,48,29},
  {150432,2097,38,49},
  {150481,2038,77,57},
  {150753,476,45,56},
  {150753,1761,76,72},
  {150979,790,50,67},
  {151005,474,74,67},
  {151243,956,45,45},
  {151244,485,72,73},
  {151246,233,53,50},
  {151479,521,57,60},
  {151485,274,53,42},
  {151486,1027,74,63},
  {151739,774,72,77},
  {151765,748,53,25},
  {151774,737,50,36},
  {151976,483,69,70},
  {152006,505,57,44},
  {152208,241,45,42},
  {152213,328,67,69},
  {152462,1707,45,61},
  {152473,2006,69,65},
  {152692,1007,52,52},
  {152708,501,72,65},
  {152930,779,55,55},
  {152960,959,74,61},
  {153217,471,72,71},
  {153222,1244,60,50},
  {153445,1021,64,58},
  {153703,466,72,70},
  {153709,220,52,34},
  {153716,203,55,31},
  {153929,500,74,66},
  {153933,533,55,33},
  {153942,524,52,34},
  {154182,285,45,35},
  {154183,306,72,67},
  {154411,937,46,60},
  {154440,319,74,57},
  {154682,318,53,48},
  {154765,434,74,74},
  {154975,548,62,66},
  {155007,192,53,37},
  {155205,263,74,73},
  {155213,310,53,34},
  {155473,586,48,65},
  {155484,875,74,56},
  {155759,949,55,46},
  {155807,552,72,73},
  {156066,643,64,50},
  {156071,638,48,34},
  {156373,266,72,45},
  {156373,339,74,52},
  {156627,2051,41,46},
  {156644,544,72,67},
  {156895,483,48,53},
  {156904,1495,69,61},
  {157132,1545,55,52},
  {157385,243,48,36},
  {157394,1280,57,56},
  {157641,237,48,37},
  {157647,1027,60,51},
  {157893,782,65,47},
  {157894,525,48,34},
  {158143,531,52,52},
  {158144,531,67,57},
  {158412,262,69,63},
  {158428,247,48,31},
  {158657,1992,38,57},
  {158661,1988,72,67},
  {158914,705,45,59},
  {158915,1444,69,68},
  {159162,466,50,60},
  {159173,946,67,65},
  {159399,1236,52,63},
  {159433,426,65,57},
  {159632,227,45,45},
  {159635,1001,53,57},
  {159636,223,50,40},
  {159871,227,45,43},
  {159872,237,50,50},
  {159873,763,65,67},
  {160110,528,57,63},
  {160113,526,45,50},
  {160114,285,50,45},
  {160127,512,67,70},
  {160373,268,69,77},
  {160404,232,50,36},
  {160613,1949,44,60},
  {160643,1918,74,73},
  {160904,645,50,69},
  {160904,1655,69,73},
  {161174,1388,67,70},
  {161180,1379,57,57},
  {161558,1000,50,51},
  {161558,1001,65,66},
  {161562,999,58,56},
  {161572,1007,46,50},
  {162575,2043,47,43},
  {162606,2033,77,66},
  {164649,1080,77,44},
  {165233,916,74,42},
  {165742,8,46,25},
  {165743,2686,77,58},
  {166157,1152,74,44},
  {166166,462,46,49},
  {166477,562,72,59},
  {166496,813,53,44},
  {166752,1376,60,50},
  {167014,1435,62,54},
  {167052,517,72,61},
  {167316,1109,74,58},
  {167324,255,53,31},
  {167579,10,45,34},
  {167582,842,72,69},
  {167587,261,53,26},
  {167854,565,69,69},
  {167863,562,53,31},
  {168104,320,67,58},
  {168141,288,60,26},
  {168381,878,48,48},
  {168425,3137,69,53},
  {168441,258,60,28},
  {168694,1835,55,45},
  {168694,2214,67,57},
  {168975,1554,58,49},
  {169265,1004,65,46},
  {169270,559,48,32},
  {169828,1751,46,31},
  {169834,1729,62,47},
  {169842,427,48,28},
  {170279,1290,65,43},
  {170282,1280,48,26},
  {170539,1024,58,29},
  {170544,1019,55,23},
  {170911,8,50,30},
  {170920,643,67,50},
  {171536,2685,41,35},
  {171574,2646,65,42},
  {171867,892,48,46},
  {172175,2043,53,44},
  {172485,1735,58,38},
  {172766,672,48,29},
  {172776,1444,60,41},
  {173440,9,46,26},
  {173446,723,48,22},
  {173446,793,55,40},
  {174184,75,48,22},
  {174184,1845,57,41},
  {175546,13,50,31},
  {175546,832,65,42},
  {176033,1467,62,59},
  {176390,9,45,37},
  {176393,3476,65,64},
  {176395,414,50,44},
  {176643,1396,46,48},
  {176683,686,53,48},
  {176794,575,58,50},
  {176822,1607,74,64},
  {177367,672,72,67},
  {177376,1062,53,27},
  {177384,2501,58,38},
  {178045,734,72,62},
  {178052,386,46,24},
  {178442,1440,74,62},
  {178445,1439,53,26},
  {178446,333,46,30},
  {178794,1091,46,34},
  {178794,644,72,75},
  {179122,6,45,38},
  {179127,753,69,73},
  {179442,7,45,40},
  {179445,439,72,77},
  {179552,267,48,53},
  {179667,2833,55,51},
  {179829,2671,60,56},
  {179832,557,48,48},
  {179846,2654,81,70},
  {180382,2618,79,83},
  {180403,597,48,39},
  {181011,608,48,30},
  {181013,1085,77,70},
  {181574,2381,74,61},
  {181628,461,48,23},
  {182104,1851,48,30},
  {182104,1774,77,66},
  {183011,961,79,60},
  {183854,3545,41,34},
  {183891,3609,77,53},
  {184251,3157,48,39},
  {184554,5995,53,48},
  {184884,2616,55,39},
  {185303,5996,57,49},
  {187414,3925,41,37},
  {187415,3844,48,26},
  {0xFFFFFFFF,0,0,0}
};

const size_t SCORE_LEN = 1388;




// ============ 播放调度 =============================

uint32_t scaledTime(){
  if(paused) return startMillis; // 暂停期间保持静止
  uint32_t elapsed = millis() - startMillis;
  // tempoPercent: 100 -> 原速; >100 更快 => 实际时间 = 原时间 * 100 / tempoPercent
  // 我们反向: 为了找到应触发的事件 startMs, 计算一个“虚拟谱时间” = elapsed * tempoPercent / 100
  uint32_t virtualT = (uint64_t)elapsed * tempoPercent / 100ULL;
  return virtualT;
}

void dispatch(){
  uint32_t vtime = scaledTime();
  // 触发符合条件的事件
  while(currentEventIndex < SCORE_LEN){
    NoteEvent ev; memcpy_P(&ev, &score[currentEventIndex], sizeof(NoteEvent));
    if(ev.startMs <= vtime){
      // 触发 NoteOn
      uint32_t durScaled = (uint64_t)ev.durMs * 100 / tempoPercent; // 速度加快则真实持续更短
      noteOn(ev.midi, millis(), durScaled);
      currentEventIndex++;
    } else break;
  }
}

void restartPlayback(){
  currentEventIndex = 0;
  startMillis = millis();
  paused = false;
  // 清空激活
  for(auto &a: activeNotes){
    if(a.active){ setServoPulse(a.midi, REST_PULSE_US); a.active=false; }
  }
}

// ============ 串口命令解析 ========================

void handleSerial(){
  if(!Serial.available()) return;
  String line = Serial.readStringUntil('\n');
  line.trim(); if(line.length()==0) return;
  // 拆分
  int sp1 = line.indexOf(' ');
  String cmd = (sp1<0)? line : line.substring(0, sp1);
  cmd.toUpperCase();
  String rest = (sp1<0)? "" : line.substring(sp1+1);

  if(cmd == "S"){
    restartPlayback();
    Serial.println(F("[S] Restart."));
  } else if(cmd == "P"){
    paused = !paused;
    if(!paused){ // 继续 -> 调整基准, 让 virtualTime 保持连续
      // 计算当前 virtualTime, 重新设置 startMillis
      uint32_t vt = scaledTime();
      startMillis = millis() - (uint64_t)vt * 100 / tempoPercent;
    }
    Serial.printf("[P] %s\n", paused?"Paused":"Resume");
  } else if(cmd == "B"){
    int val = rest.toInt(); if(val<30) val=30; if(val>400) val=400;
    tempoPercent = val;
    Serial.printf("[B] tempoPercent=%u\n", tempoPercent);
  } else if(cmd == "V"){
    int val = rest.toInt(); if(val<0) val=0; if(val>100) val=100;
    velocityPercent = val;
    Serial.printf("[V] velocityPercent=%u\n", velocityPercent);
  } else if(cmd == "L"){
    Serial.printf("[L] idx=%u/%u paused=%d tempo=%u vel=%u virtualT=%lu ms\n", (unsigned)currentEventIndex, (unsigned)SCORE_LEN, paused, tempoPercent, velocityPercent, (unsigned long)scaledTime());
  } else if(cmd == "T"){
#if CALIBRATION_MODE
    int midi = rest.toInt();
    if(keyIndex(midi)>=0){ noteOn(midi, millis(), 120); Serial.printf("[T] midi %d test.\n", midi); }
    else Serial.println(F("[T] invalid midi"));
#endif
  } else if(cmd == "O"){
#if CALIBRATION_MODE
    // O <midi> <delta>
    int sp = rest.indexOf(' ');
    if(sp>0){
      int midi = rest.substring(0, sp).toInt();
      int delta = rest.substring(sp+1).toInt();
      int k = keyIndex(midi);
      if(k>=0){ pressOffset[k] += delta; Serial.printf("[O] midi %d offset=%d\n", midi, pressOffset[k]); }
      else Serial.println(F("[O] invalid midi"));
    }
#endif
  } else if(cmd == "W"){
#if CALIBRATION_MODE
    Serial.println(F("[W] Non-zero offsets:"));
    for(int i=0;i<KEY_COUNT;i++) if(pressOffset[i]!=0){ Serial.printf("  midi %d : %d\n", i+MIDI_LOW, pressOffset[i]); }
#endif
  } else if(cmd == "R"){
#if CALIBRATION_MODE
    for(int i=0;i<KEY_COUNT;i++) pressOffset[i]=0;
    Serial.println(F("[R] All offsets cleared."));
#endif
  } else {
    Serial.println(F("[?] Unknown command"));
  }
}

// ============ 自检 (可选) =========================
void selfTest(){
  Serial.println(F("[SelfTest] sequential press..."));
  for(uint8_t midi=MIDI_LOW; midi<=MIDI_HIGH; ++midi){
    KeyMap km; if(!mapMidi(midi, km)) continue;
    setServoPulse(midi, computePressPulse(midi));
    delay(30);
    setServoPulse(midi, REST_PULSE_US);
    delay(15);
  }
  Serial.println(F("[SelfTest] done."));
}

// ============ SETUP & LOOP ========================
void setup(){
  Serial.begin(115200);
  while(!Serial && millis()<3000){};
  Serial.println(F("\n[Init] 61-Key Piano Controller"));
  Wire.begin(SDA_PIN, SCL_PIN);
  Wire.setClock(I2C_FREQ);

  for(int i=0;i<4;i++){ Serial.printf("[Init] Driver %d @0x%02X...", i, driverAddrs[i]); drivers[i].begin(); Serial.println(F("OK")); }
  // 归零所有键
  for(uint8_t midi=MIDI_LOW; midi<=MIDI_HIGH; ++midi){ setServoPulse(midi, REST_PULSE_US); }

  memset(activeNotes, 0, sizeof(activeNotes));
  restartPlayback();

  // 如需首次自检，可打开:
  // selfTest();
  Serial.println(F("[Ready] Commands: S P B V L T O W R"));
}

void loop(){
  handleSerial();
  if(!paused){
    dispatch();
  }
  scanNoteOff(millis());
}

// =================== 结束 =========================
// 后续扩展: 
// 1. MIDI 文件解析: 解析 delta-time -> 生成 NoteEvent 数组
// 2. 脚踏板: 通过延迟释放时间模拟延音 (可加 sustain flag)
// 3. EEPROM/NVS: 保存 pressOffset 校准
// 4. 动态队列: 使用最小堆按 startMs 排序支持超长曲目分段加载
// ==================================================
